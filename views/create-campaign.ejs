<script src="/src/PennySeedContract.js"></script>

<form id="createCampaign" method="POST" action="/campaigns/create-campaign">
    Create Campaign:

    <ul>
        <li>
            <label>
                Amount: $<input name="amount" type="number" placeholder="1.00" value="1.00" min="1" step="0.01">
            </label>
        </li>

        <li>
            <label>
                Deadline: <input name="deadline" type="datetime-local">
            </label>
        </li>

        <li>
            <label>
                Minimum number of Pledgers: <input name="minimumNumberOfPledgers" type="number" step="1" min="1" value="1">
            </label>
        </li>

        <li>
            <label>
                Maximum Pledger Amount: $<input name="maximumPledgeAmount" type="number" min="0.01" step="0.01" value="1.00">
            </label>
        </li>

        <li>
            <label>
                Wei: <input name="weiAmount" readonly type="number" min="1" step="1">
            </label>
        </li>

        <input hidden name="etherAddress" value=<%= _user.etherAddress %>>
    </ul>
    
    <button type="submit" disabled>Create Campaign</button>
</form>

<script>
    {
        function floatToDollar(value) {
            value *= 100;
            value = Math.ceil(value);
            value /= 100;
            return value;
        }

        if(typeof web3 !== "undefined") {
            ethereum.enable()
                .then(accounts => {
                    const form = document.querySelector(`#createCampaign`);
                    const submit = form.querySelector(`button[type="submit"]`)

                    const inputs = {};
                    form.querySelectorAll(`input`).forEach(input => {
                        const {name} = input;
                        inputs[name] = input;
                        input.addEventListener("input", event => {
                            if(event.target.type == "number") {
                                event.target.value = isNaN(event.target.value)?
                                    1 :
                                    Number(event.target.value)
                            }

                            switch(name) {
                                case "amount":
                                    inputs.maximumPledgeAmount.value = floatToDollar(Number(inputs.amount.value) / Number(inputs.minimumNumberOfPledgers.value));
                                    // add a "convert USD to WEI" for this part...
                                    inputs.weiAmount.value = Number(inputs.amount.value) * 5_327_364_750_834_100;
                                    break;
                                case "deadline":
                                    const deadline = new Date(inputs.deadline.value);
                                    submit.disabled = (deadline.getTime() < Date.now());
                                    break;
                                case "maximumPledgeAmount":
                                    inputs.minimumNumberOfPledgers.value = Math.ceil(Number(inputs.amount.value) / Number(inputs.maximumPledgeAmount.value))
                                    break;
                                case "minimumNumberOfPledgers":
                                    inputs.maximumPledgeAmount.value = floatToDollar(Number(inputs.amount.value) / Number(inputs.minimumNumberOfPledgers.value));
                                    break;
                                default:
                                    break;
                            }
                        });
                    });

                    form.addEventListener("submit", event => {
                        event.preventDefault();
                        console.log(inputs.etherAddress.value, accounts)
                        const accountIndex = accounts.findIndex(account => web3.toChecksumAddress(account) == inputs.etherAddress.value);
                        if(accountIndex >= 0) {
                            const deadline = new Date(inputs.deadline.value);
                            const campaignPeriod = Math.floor((deadline.getTime() - Date.now())/1000);

                            pennySeedContract.createCampaign.sendTransaction(Number(inputs.weiAmount.value), Number(inputs.minimumNumberOfPledgers.value), campaignPeriod, Number(inputs.amount.value)*100, deadline.getTime(), {from: accounts[accountIndex]}, (error, transactionHash) => {
                                if(error == null) {
                                    window.location.reload();
                                }
                                else
                                    console.error(error);
                            });
                        }
                        else {
                            console.error(`MetaMask doesn't include the user's registered Ether Address`);
                        }
                    });
                });
        }
    }
</script>